apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mageai.fullname" . }}-web
  labels:
    {{- include "mageai.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "mageai.web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.web.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mageai.web.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mageai.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash","-c","cp /home/src/mage_custom/metadata.yaml $USER_CODE_PATH/metadata.yaml && cp /home/src/mage_custom/io_config.yaml $USER_CODE_PATH/io_config.yaml"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
            {{- if  .Values.scheduler.enable}}
            {{- else if .Values.web.autoscaling.enabled}}  
            - name: "REDIS_URL"
              value:{{ .Values.scheduler.redis.url }}
            {{- end }}
{{- if .Values.scheduler.enable }}
          command: ["mage", "start"] 
          args: ["--instance-type", "web_server", "{{ .Values.proyectFolder }}"]
{{- end }}
          volumeMounts:  # Corrected indentation
            - name: mage-fs
              mountPath: /home/src
{{- if .Values.configMap.enable }} 
            - name: magemetadata
              mountPath: "/home/src/mage_custom/"

{{- end }}  # Moved this line to the correct place
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
{{- if .Values.persistentVolumeClaim.enable }}
        - name: mage-fs
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim.claimName }}
{{ else }}
        - name: mage-fs
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolumeClaim.claimName }}
{{- end }}
{{- if .Values.configMap.enable }}
        - name: magemetadata
          configMap:
            name: {{ .Values.configMap.name }}
{{- end }}
